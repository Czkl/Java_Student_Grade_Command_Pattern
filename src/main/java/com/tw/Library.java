package com.tw;

import java.util.*;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class Library {
    public boolean someLibraryMethod() {
        return true;
    }
    private Map<String,Student> studentMap = new HashMap<>();
    
    
    public void main(){
        Scanner input = new Scanner(System.in);
        String n = "";
        printMenu();
        while (!n.equals("3")) {

            n = input.nextLine();
            boolean flag = true;
            switch (n) {
                case "1":
                    printTip1();

                    while (flag) {
                        String stuInfo = input.nextLine();
                        Student newStudent;
                        if ((newStudent = isStuFormat(stuInfo)) != null) {
                            flag = false;
                            printRightTip1(newStudent);
                            studentMap.put(newStudent.getSno(), newStudent);
                            printMenu();
                        } else {
                            printWrongTip1();
                            flag = true;
                        }
                    }break;
                case "2":
                    printTip2();
                    while (flag) {
                        String snoStr = input.nextLine();
                        List<Student> snoList;
                        if ((snoList = isSonFormat(snoStr)) != null) {
                            flag = false;
                            printScore(snoList);
                            printMenu();
                        } else {
                            printWrongTip2();
                            flag = true;
                        }
                    }break;
                default:break;
            }
        }

    }

    private List<Student> isSonFormat(String snoStr) {
        List<Student> studentList = new ArrayList<>();

        if (snoStr.length() == 0 || snoStr.isEmpty()) return null;
        String[] snos = snoStr.split(",");
        for (String sno : snos) {
            if (studentMap.containsKey(sno)) {
                studentList.add(studentMap.get(sno));
            }
        }
        return studentList.size() == 0 ? null : studentList;
    }

    private Student isStuFormat(String stuInfo) {
        Student student = null;
        if (stuInfo.length() == 0) return null;
        String[] info = stuInfo.split(",");
        if (info.length == 6) {// 姓名，学号，数学，语文，英语，编程
            student = new Student(info[0],info[1]);

            Score score = new Score();
            for (int i = 2; i < info.length; i++) {
                String[] subjectInfo = info[i].split(":");
                if (subjectInfo[0].trim().equals("数学")) {
                    score.setMath(Integer.parseInt(subjectInfo[1].trim()));
                } else if (subjectInfo[0].trim().equals("语文")) {
                    score.setLanguage(Integer.parseInt(subjectInfo[1].trim()));
                } else if (subjectInfo[0].trim().equals("英语")) {
                    score.setEnglish(Integer.parseInt(subjectInfo[1].trim()));
                } else if (subjectInfo[0].trim().equals("编程")) {
                    score.setProgramme(Integer.parseInt(subjectInfo[1].trim()));
                } else {
                    return null;
                }
            }
            student.setScore(score);
        }
        return student;
    }

    public void printMenu() {

        System.out.print("1. 添加学生\n" +
                "2. 生成成绩单\n" +
                "3. 退出请输入你的选择（1～3）：\n");

    }

    public void printTip1() {
        System.out.print("请输入学生信息（格式：姓名, 学号, 学科: 成绩, ...），按回车提交：\n");
    }

    public void printWrongTip1() {
        System.out.print("请按正确的格式输入（格式：姓名, 学号, 学科: 成绩, ...）：\n");
    }

    public void printRightTip1(Student student) {
        System.out.print("学生"+student.getName()+"的成绩被添加\n");
    }

    public void printTip2() {
        System.out.print("请输入要打印的学生的学号（格式： 学号, 学号,...），按回车提交：\n");
    }

    public void printWrongTip2() {
        System.out.print("请按正确的格式输入要打印的学生的学号（格式： 学号, 学号,...），按回车提交：\n");
    }

    public void printScore(List<Student> studentList) {

        List<Integer> classAllTotalScore = new ArrayList<>();
        float classTotalScore = 0;
        float median = 0;
        System.out.print("成绩单\n" +
                "姓名|数学|语文|英语|编程|平均分|总分\n");
        System.out.print("========================\n");
        for (Student student : studentList) {
            Score score = student.getScore();
            System.out.print(student.getName() +"|"+score.getMath()+
                    "|"+score.getLanguage()+"|"+score.getEnglish()+"|" +
                    score.getProgramme()+"|"+score.getAverage_score()+"|"+
                    score.getTotal_score()+"\n");
            classAllTotalScore.add(score.getTotal_score());
            
        }
        Collections.sort(classAllTotalScore);
        int l, r;
        for ( l = 0,r =classAllTotalScore.size()-1 ; l<r ; ) {
            classTotalScore += classAllTotalScore.get(l) + classAllTotalScore.get(r);
            l++;
            r--;
        }
        if (l == r) {
            median = classAllTotalScore.get(l);
        }
        else {
            median = classAllTotalScore.get(l) + classAllTotalScore.get(r);
        }
        
        System.out.print("========================\n");
        System.out.print("全班总分平均数："+(classTotalScore/classAllTotalScore.size())+"\n");
        System.out.print("全班总分中位数："+median+"\n");
    }
}
